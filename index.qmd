---
title: "PM 566 Final Project"
author: Maria Oljaca
---

### Project Background:

\[Note: "Protein X" and "Protein Y" are used in place of actual protein names for data security purposes.\]

This dataset originates from an experiment focused on stem cell therapy for bone regeneration, using a rat animal model. Prior research has established the effectiveness of stem cells transduced with Protein X in treating critical-sized bone defects. In rat studies, it has been established that five million cells is the standard dose needed to heal critical-sized bone defects.

This study serves a dual purpose: it seeks to ascertain whether Protein Y, an upstream protein of Protein X, can enhance the bone-healing capabilities of Protein X. Furthermore, it aims to determine whether a reduced dosage of three million cells can produce comparable bone-healing outcomes.

The study includes four distinct experimental groups: X+Y5M, X+Y3M, X5M, and X3M. Critical-sized femoral defects, created surgically in rats, were treated with either three or five million stem cells transduced with a virus encoding Protein X, or a combination of both Protein X and Y. Subsequently, the quality and quantity of bone formation in rat femurs were assessed through various methods, including biomechanical strength testing, the results of which are contained in this dataset. The key variables measured with biomechanical testing are max torque (N), torsional stiffness (Nm/deg), total energy to failure (Nm\*deg), and rotation at failure or max displacement (deg). Torsional stiffness is considered to be the most important variable in measuring the integrity of regenerated bone.

The question we aim to answer with this dataset is: which treatment group showed the greatest levels of bone regeneration, as measured by torsional stiffness, max torque, total energy to failure, and max displacement? The final report is available for download from this website. Included in this homepage are some interactive visualizations that may help you get a better understanding of the data.

```{r, results='hide', echo=FALSE}
# Read in the data
library(readxl)
xy_bmech <- read_excel("data/XY Biomechanical Results.xlsx")
```

```{r, results='hide', message=FALSE, echo=FALSE}
library(tidyverse)
library(ggplot2)
library(plotly)
```

```{r, results='hide', echo=FALSE}
# Defining and mapping SID to Experimental Group
experimental_groups <- data.frame(
  SID = c(
    "518L", "516R", "571L", "545R", "509L", "506R", "186R", "187L", "146L",
    "195L", "122R", "182L", "179R", "178L", "142L", "141R", "172L", "177R", "553R", "145R",
    "144L", "124R", "919R", "189L", "166R", "167L", "552R", "538R", "512L", "501L",
    "193R", "592L", "510R", "129R", "150L", "188L"
  ),
  Exp_Group = c(
    "X+Y3M", "X+Y3M", "X+Y3M", "X+Y3M", "X+Y3M", "X+Y3M", "X+Y3M", "X+Y3M", "X+Y3M",
    "X3M", "X3M", "X3M", "X3M", "X3M", "X3M", "X3M", "X3M", "X3M", "X5M", "X5M", "X5M", "X5M", "X5M", "X5M", "X5M", "X5M", "X5M", "X+Y5M", "X+Y5M",
    "X+Y5M", "X+Y5M", "X+Y5M", "X+Y5M", "X+Y5M", "X+Y5M", "X+Y5M"
  )
)
xy_bmech <- xy_bmech %>%
  left_join(experimental_groups, by = "SID")
```

```{r, results='hide', echo=FALSE}
xy_bmech <- xy_bmech %>%
  rename(Total_Energy = `Total Energy`,
         Max_Torque = `Max Torque`,
         Max_Displacement = `Max Displacement`)
xy_bmech <- na.omit(xy_bmech)
```

##### **Figure 1: Boxplots of Biomechanical Testing Variables per Experimental Group**

```{r, echo=FALSE}
box_plots <- list()

for (variable in c("Stiffness", "Total_Energy", "Max_Torque", "Max_Displacement")) {
  p <- ggplot(xy_bmech, aes(x = Exp_Group, y = .data[[variable]], fill = Exp_Group)) +
    geom_boxplot() +
    labs(
      x = "Experimental Group",
      y = variable
    ) +
    theme_minimal()
    #theme(legend.position = "none")  # Remove legend for individual plots
    
  box_plots[[variable]] <- p
}

# Convert ggplot2 plots to interactive plots using ggplotly
interactive_plots <- lapply(box_plots, ggplotly)

# Arrange the interactive plots using subplot with custom layout
combined_plot <- subplot(
  interactive_plots[[1]], interactive_plots[[2]],
  interactive_plots[[3]], interactive_plots[[4]],
  nrows = 2, titleX = TRUE, titleY = TRUE,
  margin = 0.13
)

# View the combined interactive plot
combined_plot
```

##### Figure 2: Violin Plot Showing Detailed View of the Distribution of Torsional Stiffness

This violin plot allows you to get a closer look at the distribution of the torsional stiffness variable, which is the most crucial to measuring the integrity of regenerated bone.

```{r, echo=FALSE}
p1 <- ggplot(xy_bmech, aes(x = Exp_Group, y = Stiffness, fill = Exp_Group)) +
  geom_point(position = position_jitter(width = 0.1), size = 1.5, alpha = 0.7) +
  geom_violin(alpha = 0.3) +
  labs(
    title = "Distribution of Torsional Stiffness",
    x = "Experimental Group",
    y = "Stiffness"
  )
p_plotly <- ggplotly(p1)
p_plotly
```
